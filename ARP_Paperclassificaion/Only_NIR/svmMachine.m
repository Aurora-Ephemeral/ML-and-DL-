function [classificationSVM,validationAccuracy] = svmMachine(trainingset)
%this is a general svm machine for the classification
%% modify the input 
[n,m] = size(trainingset);
predictors = trainingset(:,1:(m-1));
response = trainingset(:,m);

%% generate the template
template = templateSVM(...
    'KernelFunction', 'polynomial', ...
    'PolynomialOrder', 2, ...
    'KernelScale', 'auto', ...
    'BoxConstraint', 1, ...
    'Standardize', true);
%% fit the classifier
classificationSVM = fitcecoc(...
    predictors, ...
    response, ...
    'Learners', template, ...
    'Coding', 'onevsone');
%% validation result
partitionedModel = crossval(classificationSVM, 'KFold', 10);
[validationPredictions, validationScores] = kfoldPredict(partitionedModel);
validationAccuracy = 1 - kfoldLoss(partitionedModel, 'LossFun', 'ClassifError');
fprintf('the validation accuracy is %f:\n',validationAccuracy);
fprintf('[status]:training process completed\n');
end

